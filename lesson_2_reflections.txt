What happens when you initialize a repository? Why do you need to do it?

When you create a repository it is empty. The first step towards giving 
you use of git's features is making your first commit.

How is the staging area different from the working directory and the 
repository? What value do you think it offers?

It allows you to add a file as you go to the following commit. This 
allows you to add several files in at different points in time. This 
also allows you to test new functionality out on a specific file 
without worrying that it will mess up your current commit.

How can you use the staging area to make sure you have one commit per 
logical change?

By using git diff --staged you can directly compare the staging area 
with the repository to see what you have added to be commited. If you 
need to add more at this point, you can use get diff to compare the 
working directory with the staging area and see what files you would 
like to add in order to have a single logical change. 

What are some situations when branches would be helpful in keeping your 
history organized? How would branches help?

Branches are useful anytime you want to work on code for a product 
unique to the original starting at the same point as a current commit 
or anytime you want to work on a specific goal that might take a while 
to get to work while the project will continue to have commits added to 
it.

